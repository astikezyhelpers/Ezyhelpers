# Generated by Django 4.2.20 on 2025-05-12 06:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('answer', django_ckeditor_5.fields.CKEditor5Field()),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of the lead', max_length=255)),
                ('email', models.EmailField(help_text='Email address', max_length=255)),
                ('phone', models.CharField(help_text='Contact phone number', max_length=20)),
                ('message', models.TextField(blank=True, help_text='Message or inquiry details')),
                ('source', models.CharField(choices=[('Homepage', 'Homepage Quick Quote'), ('Contact Us', 'Contact Us Page'), ('Service Page', 'Service Page Quote'), ('Other', 'Other')], help_text='Where the lead originated from', max_length=50)),
                ('service_needed', models.CharField(blank=True, help_text='Service requested (Homepage)', max_length=255, null=True)),
                ('location', models.CharField(blank=True, help_text='Location provided (Homepage)', max_length=255, null=True)),
                ('timing', models.CharField(blank=True, help_text='When service is needed (Homepage)', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MainService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('meta_title', models.CharField(max_length=200)),
                ('meta_description', models.TextField()),
                ('hero_title', django_ckeditor_5.fields.CKEditor5Field()),
                ('hero_subtitle', django_ckeditor_5.fields.CKEditor5Field()),
                ('hero_image', models.ImageField(upload_to='static/service_images/')),
                ('hero_rating', models.DecimalField(decimal_places=2, default=4.98, max_digits=3)),
                ('features_title', models.CharField(max_length=200)),
                ('how_it_works_title', models.CharField(max_length=200)),
                ('benefits_title', models.CharField(max_length=200)),
                ('benefits_link_text', models.CharField(blank=True, max_length=100)),
                ('benefits_link_url', models.CharField(blank=True, max_length=200)),
                ('specialized_services_title', models.CharField(max_length=200)),
                ('considerations_title', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('faqs', models.ManyToManyField(to='main.faq')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('icon', models.CharField(max_length=50)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('meta_title', models.CharField(max_length=100)),
                ('meta_description', models.TextField()),
                ('content', django_ckeditor_5.fields.CKEditor5Field()),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('icon', models.CharField(max_length=50)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
            ],
        ),
        migrations.CreateModel(
            name='SpecializedServiceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('icon', models.CharField(blank=True, help_text='Optional: FontAwesome class', max_length=50)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specialized_details', to='main.mainservice')),
            ],
        ),
        migrations.AddField(
            model_name='mainservice',
            name='features',
            field=models.ManyToManyField(to='main.servicefeature'),
        ),
        migrations.AddField(
            model_name='mainservice',
            name='stats',
            field=models.ManyToManyField(to='main.servicestat'),
        ),
        migrations.CreateModel(
            name='HowItWorksStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=100)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('icon', models.CharField(blank=True, help_text="Optional: FontAwesome class (e.g., 'fas fa-check')", max_length=50)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='how_it_works_steps', to='main.mainservice')),
            ],
            options={
                'ordering': ['step_number'],
            },
        ),
        migrations.CreateModel(
            name='ConsiderationPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point_text', django_ckeditor_5.fields.CKEditor5Field()),
                ('icon', models.CharField(blank=True, default='fas fa-info-circle', help_text='Optional: FontAwesome class (defaults to info icon)', max_length=50)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consideration_points', to='main.mainservice')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('meta_title', models.CharField(max_length=200)),
                ('meta_description', models.TextField()),
                ('image', models.ImageField(default='static/images/ezyhelpers.png', upload_to='static/blog_images/')),
                ('content', django_ckeditor_5.fields.CKEditor5Field()),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reading_time', models.PositiveIntegerField(default=5, editable=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Benefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('icon', models.CharField(blank=True, help_text="Optional: FontAwesome class (e.g., 'fas fa-check-circle')", max_length=50)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='main.mainservice')),
            ],
        ),
    ]
